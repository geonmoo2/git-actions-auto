name: CI/CD Docker with Docker Compose

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/git-actions-auto
  VERSION: ${{ github.sha }}
  DOCKER_COMPOSE_FILE: docker-compose.yml
  NETWORK_NAME: my-network

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Build Docker image
        run: |
          docker buildx build --builder ${{ steps.buildx.outputs.name }} \
          --tag ${{ env.DOCKER_IMAGE }}:latest --push .

  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -L -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '"' -f 4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Create Docker network
        run: |
          docker network create ${{ env.NETWORK_NAME }} || true

      - name: Deploy Application with Docker Compose
        run: |
          docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} pull  # 최신 이미지로 업데이트
          docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} up -d --build  # 컨테이너 생성 및 시작
